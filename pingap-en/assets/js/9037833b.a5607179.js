"use strict";(self.webpackChunkpingap=self.webpackChunkpingap||[]).push([[7826],{7249:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"plugins/limit","title":"Rate Limit","description":"Protect your upstream services from traffic spikes and malicious attacks by limiting the request rate or concurrent connections per unit of time, ensuring service stability and fairness.","source":"@site/docs/plugins/limit.md","sourceDirName":"plugins","slug":"/plugins/limit","permalink":"/pingap-en/docs/plugins/limit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/plugins/limit.md","tags":[],"version":"current","sidebarPosition":92,"frontMatter":{"sidebar_position":92,"title":"Rate Limit","description":"Protect your upstream services from traffic spikes and malicious attacks by limiting the request rate or concurrent connections per unit of time, ensuring service stability and fairness."},"sidebar":"tutorialSidebar","previous":{"title":"API Key Auth","permalink":"/pingap-en/docs/plugins/key-auth"},"next":{"title":"Mock Service","permalink":"/pingap-en/docs/plugins/mock"}}');var s=n(4848),r=n(8453);const l={sidebar_position:92,title:"Rate Limit",description:"Protect your upstream services from traffic spikes and malicious attacks by limiting the request rate or concurrent connections per unit of time, ensuring service stability and fairness."},c="Rate Limit (Limit) Plugin",o={},d=[{value:"Feature Introduction",id:"feature-introduction",level:2},{value:"Limiting Modes",id:"limiting-modes",level:3},{value:"Client Identification (<code>tag</code>)",id:"client-identification-tag",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"<code>weight</code> Parameter Explained",id:"weight-parameter-explained",level:3},{value:"Complete Examples",id:"complete-examples",level:2},{value:"Example 1: Rate Limiting an API",id:"example-1-rate-limiting-an-api",level:3},{value:"Access Effects",id:"access-effects",level:3},{value:"Example 2: Limiting Concurrency for an Expensive Endpoint",id:"example-2-limiting-concurrency-for-an-expensive-endpoint",level:3},{value:"Access Effects",id:"access-effects-1",level:3}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"rate-limit-limit-plugin",children:"Rate Limit (Limit) Plugin"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"limit"})," plugin is a powerful traffic control plugin that allows you to apply precise rate and concurrency limits to requests passing through Pingap. It is a critical tool for protecting backend services, preventing resource abuse, and defending against DoS attacks."]}),"\n",(0,s.jsx)(i.h2,{id:"feature-introduction",children:"Feature Introduction"}),"\n",(0,s.jsx)(i.p,{children:"This plugin provides two core limiting modes and allows for fine-grained control based on various client identifiers."}),"\n",(0,s.jsx)(i.h3,{id:"limiting-modes",children:"Limiting Modes"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Rate Limiting"}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"How it works"}),": Limits the total number of requests allowed from a specific identifier (like an IP address) within a ",(0,s.jsx)(i.strong,{children:"given time window"}),'. For example, "a maximum of 100 requests per minute for each IP."']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Mode Name"}),": ",(0,s.jsx)(i.code,{children:"rate"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Concurrency Limiting"}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"How it works"}),": Limits the number of concurrent (in-flight) requests that can exist for a specific identifier (like a user ID) at the ",(0,s.jsx)(i.strong,{children:"same moment"}),'. For example, "a maximum of 5 concurrent requests for each user."']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Mode Name"}),": ",(0,s.jsx)(i.code,{children:"inflight"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.h3,{id:"client-identification-tag",children:["Client Identification (",(0,s.jsx)(i.code,{children:"tag"}),")"]}),"\n",(0,s.jsx)(i.p,{children:"You can configure the plugin to identify and differentiate clients in the following four ways for targeted rate limiting:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsxs)(i.strong,{children:["IP Address (",(0,s.jsx)(i.code,{children:"ip"}),")"]}),": Limits based on the client's real IP address. This is the most common method."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsxs)(i.strong,{children:["HTTP Header (",(0,s.jsx)(i.code,{children:"header"}),")"]}),": Limits based on the value of a specified request header (e.g., ",(0,s.jsx)(i.code,{children:"X-User-ID"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsxs)(i.strong,{children:["Cookie (",(0,s.jsx)(i.code,{children:"cookie"}),")"]}),": Limits based on the value of a specified cookie (e.g., session ID ",(0,s.jsx)(i.code,{children:"session_id"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsxs)(i.strong,{children:["URL Query Parameter (",(0,s.jsx)(i.code,{children:"query"}),")"]}),": Limits based on the value of a specified URL query parameter (e.g., ",(0,s.jsx)(i.code,{children:"api_key"}),")."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Protecting Login Endpoints"}),": Apply ",(0,s.jsx)(i.strong,{children:"rate limiting"})," by ",(0,s.jsx)(i.strong,{children:"IP"})," to the login API to defend against password brute-force attacks."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Preventing Scraper Abuse"}),": Apply ",(0,s.jsx)(i.strong,{children:"rate limiting"})," by ",(0,s.jsx)(i.strong,{children:"IP"})," or ",(0,s.jsx)(i.strong,{children:"User-Agent"})," (via the ",(0,s.jsx)(i.code,{children:"header"})," tag) to endpoints with heavy crawler traffic."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Ensuring Fair Usage"}),": Apply ",(0,s.jsx)(i.strong,{children:"rate limiting"})," by ",(0,s.jsx)(i.strong,{children:"API Key"})," (via ",(0,s.jsx)(i.code,{children:"header"})," or ",(0,s.jsx)(i.code,{children:"query"})," tag) to public APIs to ensure each user stays within their quota."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Protecting Expensive Operations"}),": Apply ",(0,s.jsx)(i.strong,{children:"concurrency limiting"})," by ",(0,s.jsx)(i.strong,{children:"User ID"})," (via ",(0,s.jsx)(i.code,{children:"cookie"})," or ",(0,s.jsx)(i.code,{children:"header"})," tag) for requests that consume significant computational or database resources (like report generation) to prevent a single user from overwhelming the system."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Global Concurrency Protection"}),": Limit the total ",(0,s.jsx)(i.strong,{children:"concurrent connections"})," for an entire service to prevent service avalanches caused by traffic spikes."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,s.jsxs)(i.p,{children:["Configuration is done in the ",(0,s.jsx)(i.code,{children:"plugin.limit.toml"})," file."]}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(i.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(i.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"type"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:'"rate"'})}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:["The limiting mode. Possible values are ",(0,s.jsx)(i.code,{children:'"rate"'})," (rate limiting) or ",(0,s.jsx)(i.code,{children:'"inflight"'})," (concurrency limiting)."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"max"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"Integer"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.strong,{children:"Yes"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"-"}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,s.jsx)(i.strong,{children:"(Required)"})," The maximum number of allowed requests. In ",(0,s.jsx)(i.code,{children:"rate"})," mode, it's the number of requests in the time window; in ",(0,s.jsx)(i.code,{children:"inflight"})," mode, it's the number of concurrent requests."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"interval"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,s.jsx)(i.strong,{children:"Yes"})," for ",(0,s.jsx)(i.code,{children:"rate"})," mode"]}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:'"10s"'})}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:["The size of the time window, used only for ",(0,s.jsx)(i.code,{children:"rate"})," mode. The format is a time string (e.g., ",(0,s.jsx)(i.code,{children:'"1m"'}),", ",(0,s.jsx)(i.code,{children:'"1h"'}),")."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"tag"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:'"ip"'})}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:["The client identification method. Possible values are ",(0,s.jsx)(i.code,{children:'"ip"'}),", ",(0,s.jsx)(i.code,{children:'"header"'}),", ",(0,s.jsx)(i.code,{children:'"cookie"'}),", ",(0,s.jsx)(i.code,{children:'"query"'}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"key"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"String"}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,s.jsx)(i.strong,{children:"Yes"})," when ",(0,s.jsx)(i.code,{children:"tag"})," is not ",(0,s.jsx)(i.code,{children:"ip"})]}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"-"}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:["When ",(0,s.jsx)(i.code,{children:"tag"})," is ",(0,s.jsx)(i.code,{children:"header"}),", ",(0,s.jsx)(i.code,{children:"cookie"}),", or ",(0,s.jsx)(i.code,{children:"query"}),", this specifies the ",(0,s.jsx)(i.strong,{children:"key name"})," to be read."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"weight"})}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"Integer"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:"No"}),(0,s.jsx)(i.td,{style:{textAlign:"left"},children:(0,s.jsx)(i.code,{children:"50"})}),(0,s.jsxs)(i.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(i.strong,{children:"smoothing weight"})," for the current window, used only for ",(0,s.jsx)(i.code,{children:"rate"})," mode. The value ranges from ",(0,s.jsx)(i.code,{children:"0-100"}),". It's used to smooth the rate calculation to avoid bursts at the window boundary. ",(0,s.jsx)(i.strong,{children:"See details below"}),"."]})]})]})]}),"\n",(0,s.jsxs)(i.h3,{id:"weight-parameter-explained",children:[(0,s.jsx)(i.code,{children:"weight"})," Parameter Explained"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"weight"})," parameter is used to ",(0,s.jsx)(i.strong,{children:"smooth the rate calculation"})," to avoid the problem of rate spikes at the boundary of a time window."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["When ",(0,s.jsx)(i.code,{children:"weight"})," is ",(0,s.jsx)(i.code,{children:"0"}),", the rate calculation is based entirely on the number of requests in the ",(0,s.jsx)(i.strong,{children:"previous"})," time window. This value is stable but will not apply any limit on the first use because the previous window has no data."]}),"\n",(0,s.jsxs)(i.li,{children:["When ",(0,s.jsx)(i.code,{children:"weight"})," is greater than ",(0,s.jsx)(i.code,{children:"0"}),", the rate is calculated by combining the request counts from the ",(0,s.jsx)(i.strong,{children:"previous"})," and ",(0,s.jsx)(i.strong,{children:"current"})," windows. The formula is:\n",(0,s.jsx)(i.code,{children:"Smoothed Rate = (Previous Window Count * (1 - weight/100)) + (Current Window Count * weight/100)"})]}),"\n",(0,s.jsxs)(i.li,{children:["A ",(0,s.jsx)(i.strong,{children:"recommended value"})," is ",(0,s.jsx)(i.code,{children:"50"})," (the default), which gives equal weight to the previous and current windows, resulting in a smoother value that better reflects the true average rate."]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"complete-examples",children:"Complete Examples"}),"\n",(0,s.jsx)(i.h3,{id:"example-1-rate-limiting-an-api",children:"Example 1: Rate Limiting an API"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Goal"}),": Protect our public API by limiting each API Key to a maximum of 100 requests per minute. The API Key is passed via the ",(0,s.jsx)(i.code,{children:"X-Api-Key"})," request header."]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["Configure the plugin (",(0,s.jsx)(i.code,{children:"plugin.limit-api-rate.toml"}),")"]}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'# Mode: rate limiting\ntype = "rate"\n\n# Limit: 100 requests per minute\nmax = 100\ninterval = "1m"\n\n# Identification method: request header\ntag = "header"\nkey = "X-Api-Key"\n\n# Set smoothing weight to 50%\nweight = 50\n'})}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["Apply the plugin in a Location (",(0,s.jsx)(i.code,{children:"location.toml"}),")"]}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'# location.toml\n[[server.locations]]\npath = "/api/public/"\nupstream = "public-api-backend"\nplugins = [\n    "limit-api-rate",\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"access-effects",children:"Access Effects"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["For a client with ",(0,s.jsx)(i.code,{children:"X-Api-Key: key-A"}),", the first 100 requests within a minute will pass normally."]}),"\n",(0,s.jsxs)(i.li,{children:["Starting from the 101st request, that client will receive a ",(0,s.jsx)(i.code,{children:"429 Too Many Requests"})," response until the current time window ends."]}),"\n",(0,s.jsxs)(i.li,{children:["Another client with ",(0,s.jsx)(i.code,{children:"X-Api-Key: key-B"})," will have its own independent counter and will not be affected."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"example-2-limiting-concurrency-for-an-expensive-endpoint",children:"Example 2: Limiting Concurrency for an Expensive Endpoint"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Goal"}),": ",(0,s.jsx)(i.code,{children:"/api/reports"})," is a resource-intensive report generation endpoint. We want to limit each logged-in user (identified by a ",(0,s.jsx)(i.code,{children:"session_id"})," cookie) to generating only 1 report at a time."]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["Configure the plugin (",(0,s.jsx)(i.code,{children:"plugin.limit-report-inflight.toml"}),")"]}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'# Mode: concurrency limiting\ntype = "inflight"\n\n# Limit: 1 concurrent request per user\nmax = 1\n\n# Identification method: Cookie\ntag = "cookie"\nkey = "session_id"\n'})}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["Apply the plugin in a Location (",(0,s.jsx)(i.code,{children:"location.toml"}),")"]}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'# location.toml\n[locations.route-for-my-app]\npath = "/api/reports"\nupstream = "report-generator-backend"\nplugins = [\n    "limit-report-inflight",\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"access-effects-1",children:"Access Effects"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A user with ",(0,s.jsx)(i.code,{children:"session_id=abc"})," makes their first report generation request, which executes normally."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Before"})," the first request is complete, the same user makes a second report generation request. This request will be intercepted by the plugin and will immediately receive a ",(0,s.jsx)(i.code,{children:"429 Too Many Requests"})," response."]}),"\n",(0,s.jsx)(i.li,{children:"Only after the first request is complete can the user make a new request."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var t=n(6540);const s={},r=t.createContext(s);function l(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);