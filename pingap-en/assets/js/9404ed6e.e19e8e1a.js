"use strict";(self.webpackChunkpingap=self.webpackChunkpingap||[]).push([[5412],{8233:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"argument","title":"Command-Line Arguments and Environment Variables","description":"While the core behavior of Pingap is defined through TOML files, the service\'s startup, operational mode, and some key configurations are specified via command-line arguments or environment variables.","source":"@site/docs/argument.md","sourceDirName":".","slug":"/argument","permalink":"/pingap-en/docs/argument","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/argument.md","tags":[],"version":"current","sidebarPosition":21,"frontMatter":{"sidebar_position":21},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started Tutorial","permalink":"/pingap-en/docs/getting_started"},"next":{"title":"Detailed Configuration Reference","permalink":"/pingap-en/docs/config"}}');var r=n(4848),i=n(8453);const s={sidebar_position:21},d="Command-Line Arguments and Environment Variables",c={},o=[{value:"Argument Reference",id:"argument-reference",level:2},{value:"A. Core Arguments",id:"a-core-arguments",level:3},{value:"B. Runtime Mode Arguments",id:"b-runtime-mode-arguments",level:3},{value:"C. Auto-Update Arguments",id:"c-auto-update-arguments",level:3},{value:"D. Cluster and Utility Arguments",id:"d-cluster-and-utility-arguments",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Practical Startup Examples",id:"practical-startup-examples",level:2},{value:"1. Local File Mode (Recommended for Getting Started)",id:"1-local-file-mode-recommended-for-getting-started",level:3}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"command-line-arguments-and-environment-variables",children:"Command-Line Arguments and Environment Variables"})}),"\n",(0,r.jsx)(t.p,{children:"While the core behavior of Pingap is defined through TOML files, the service's startup, operational mode, and some key configurations are specified via command-line arguments or environment variables."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Priority Note"}),": Command-line arguments have a higher priority than environment variables. If both are set, the command-line argument will take precedence."]}),"\n",(0,r.jsx)(t.h2,{id:"argument-reference",children:"Argument Reference"}),"\n",(0,r.jsx)(t.p,{children:"We have categorized the startup arguments to help you find what you need quickly."}),"\n",(0,r.jsx)(t.h3,{id:"a-core-arguments",children:"A. Core Arguments"}),"\n",(0,r.jsx)(t.p,{children:"These are the most fundamental and commonly used arguments for configuring and running Pingap."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Argument"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Short Flag"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"conf"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"c"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Path to a configuration file or directory, defaults to the current directory. Supported formats:",(0,r.jsx)("br",{}),"- Single file: ",(0,r.jsx)(t.code,{children:"/opt/pingap/conf/pingap.toml"}),(0,r.jsx)("br",{}),"- Multi-file directory: ",(0,r.jsx)(t.code,{children:"/opt/pingap/conf"}),(0,r.jsx)("br",{}),"- Separated config directory: ",(0,r.jsx)(t.code,{children:"/opt/pingap/conf?separation"}),(0,r.jsx)("br",{}),"- etcd: ",(0,r.jsx)(t.code,{children:"etcd://user:pass@ip:port/path?timeout=10s"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"admin"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Address for the admin interface, supports authentication formats:",(0,r.jsx)("br",{}),"- Base64: ",(0,r.jsx)(t.code,{children:"base64(user:pass)@ip:port/prefix"}),(0,r.jsx)("br",{}),"- Plaintext: ",(0,r.jsx)(t.code,{children:"user:pass@ip:port/prefix"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"log"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The directory for log output."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"b-runtime-mode-arguments",children:"B. Runtime Mode Arguments"}),"\n",(0,r.jsx)(t.p,{children:"These arguments control the startup behavior and lifecycle of Pingap."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Argument"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Short Flag"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"daemon"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"d"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Run as a daemon process (required for the ",(0,r.jsx)(t.code,{children:"upgrade"})," feature)."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"upgrade"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"u"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Zero-downtime upgrade mode, receives requests from the original process via a unix socket."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"test"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"t"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Only test the validity of the configuration."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"threads"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"}}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Sets the default number of threads, overriding the config file setting. Generally used for temporary testing."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"c-auto-update-arguments",children:"C. Auto-Update Arguments"}),"\n",(0,r.jsx)(t.p,{children:"Pingap provides powerful dynamic configuration capabilities. The following arguments control the auto-update behavior after configuration changes."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Argument"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Short Flag"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"autorestart"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"a"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["Automatically restart on configuration updates (includes ",(0,r.jsx)(t.code,{children:"autoreload"})," functionality)."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"autoreload"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Automatically reload parts of the configuration (supports upstream, location, plugin, certificate)."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"d-cluster-and-utility-arguments",children:"D. Cluster and Utility Arguments"}),"\n",(0,r.jsx)(t.p,{children:"These are arguments for advanced scenarios, such as Etcd cluster deployments and configuration migrations."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Argument"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Short Flag"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"cp"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Mark as a control plane node (only for etcd mode)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"sync"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Synchronize configuration to another storage and then exit."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"template"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Output a configuration template and then exit."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(t.p,{children:["All command-line arguments can be set via environment variables, which is particularly useful in containerized deployments. All environment variables are prefixed with ",(0,r.jsx)(t.code,{children:"PINGAP_"}),"."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Environment Variable"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Corresponding Argument"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_CONF"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--conf"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_DAEMON"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--daemon"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_UPGRADE"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--upgrade"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_LOG"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--log"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_CP"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--cp"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_AUTORESTART"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--autorestart"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_AUTORELOAD"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"--autoreload"})})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["For the ",(0,r.jsx)(t.code,{children:"--admin"})," argument, the environment variable is split into three parts for easier management:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Environment Variable"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Corresponds To"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_ADMIN_ADDR"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Admin interface address"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_ADMIN_USER"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Admin interface username"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"PINGAP_ADMIN_PASSWORD"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Admin interface password"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"practical-startup-examples",children:"Practical Startup Examples"}),"\n",(0,r.jsx)(t.h3,{id:"1-local-file-mode-recommended-for-getting-started",children:"1. Local File Mode (Recommended for Getting Started)"}),"\n",(0,r.jsx)(t.p,{children:"This is the most common deployment method. It runs in the background and allows for hot-reloading of commonly used configurations."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'# Set the log level to INFO\n# -c: Specify the configuration directory\n# -d: Run as a background daemon process\n# --log: Output logs to a file\n# --autoreload: Enable configuration hot-reloading\nRUST_LOG=INFO pingap \\\n  -c /opt/pingap/conf \\\n  -d \\\n  --log /opt/pingap/pingap.log \\\n  --autoreload\n\n\n### 2. Etcd Cluster Mode\n\nFor multi-node deployments, it is recommended to use Etcd as a unified configuration center and to separate the control plane nodes from the worker nodes.\n\nControl Plane Node\n\nThis node runs the Web UI and writes all configuration changes to Etcd.\n\n```bash\n# -c: Specify etcd as the configuration source\n# --cp: Declare this as a control plane node\n# --admin: Start the web admin interface\nRUST_LOG=INFO pingap \\\n  -c "etcd://user:pass@127.0.0.1:2379/pingap" \\\n  -d \\\n  --cp \\\n  --admin=pingap:YourSecurePassword@0.0.0.0:3018\n'})}),"\n",(0,r.jsx)(t.p,{children:"Worker Node"}),"\n",(0,r.jsx)(t.p,{children:"These nodes read the configuration from Etcd and handle the actual business traffic. They do not need to run the Web UI."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'# -c: Read configuration from the same etcd path\n# -d: Run in the background\n# --log: Write logs to a file\n# --autoreload: Watch for etcd config changes and enable hot-reloading\nRUST_LOG=INFO pingap \\\n  -c "etcd://user:pass@127.0.0.1:2379/pingap" \\\n  -d \\\n  --log /opt/pingap/pingap.log \\\n  --autoreload\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var l=n(6540);const r={},i=l.createContext(r);function s(e){const t=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);