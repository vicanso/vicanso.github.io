"use strict";(self.webpackChunkpingap=self.webpackChunkpingap||[]).push([[8284],{645:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"plugins/ip-restriction","title":"IP Restriction","description":"Implement access control from specific sources by configuring IP address blacklists or whitelists, effectively blocking malicious access, limiting service access scope, and enhancing application security.","source":"@site/docs/plugins/ip-restriction.md","sourceDirName":"plugins","slug":"/plugins/ip-restriction","permalink":"/pingap-en/docs/plugins/ip-restriction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/plugins/ip-restriction.md","tags":[],"version":"current","sidebarPosition":89,"frontMatter":{"sidebar_position":89,"title":"IP Restriction","description":"Implement access control from specific sources by configuring IP address blacklists or whitelists, effectively blocking malicious access, limiting service access scope, and enhancing application security."},"sidebar":"tutorialSidebar","previous":{"title":"Static File Service (Directory)","permalink":"/pingap-en/docs/plugins/directory"},"next":{"title":"JWT Authentication (JWT)","permalink":"/pingap-en/docs/plugins/jwt"}}');var t=n(4848),l=n(8453);const r={sidebar_position:89,title:"IP Restriction",description:"Implement access control from specific sources by configuring IP address blacklists or whitelists, effectively blocking malicious access, limiting service access scope, and enhancing application security."},c="IP Restriction Plugin",o={},d=[{value:"Feature Introduction",id:"feature-introduction",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Complete Examples",id:"complete-examples",level:2},{value:"Example 1: Using a Blacklist to Block Malicious IPs",id:"example-1-using-a-blacklist-to-block-malicious-ips",level:3},{value:"Access Effects",id:"access-effects",level:3},{value:"Example 2: Using a Whitelist to Protect an Admin Backend",id:"example-2-using-a-whitelist-to-protect-an-admin-backend",level:3},{value:"Access Effects",id:"access-effects-1",level:3}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"ip-restriction-plugin",children:"IP Restriction Plugin"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"ip-restriction"})," plugin is a request-phase security plugin that allows you to ",(0,t.jsx)(s.strong,{children:"allow"})," or ",(0,t.jsx)(s.strong,{children:"deny"})," access to requests based on the client's IP address, serving as an important line of defense for implementing Network Access Control Lists (ACLs)."]}),"\n",(0,t.jsx)(s.h2,{id:"feature-introduction",children:"Feature Introduction"}),"\n",(0,t.jsx)(s.p,{children:"This plugin checks the source IP address of a request before it reaches the upstream service. It supports two core working modes:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Blacklist (Deny)"}),": Denies access to IP addresses or IP ranges specified in the list, while allowing all other IPs."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Whitelist (Allow)"}),": Only allows access from IP addresses or IP ranges specified in the list, denying all others."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The plugin can intelligently identify the client's real IP (prioritizing headers like ",(0,t.jsx)(s.code,{children:"X-Forwarded-For"}),") and supports configuring single IP addresses as well as CIDR network ranges, providing flexible and powerful access control capabilities."]}),"\n",(0,t.jsx)(s.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Blocking Malicious Access"}),": When you discover malicious IP addresses scanning or attacking your service, you can quickly add them to a ",(0,t.jsx)(s.strong,{children:"blacklist"})," to immediately block all their requests."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Protecting Internal Systems"}),": For high-privilege systems like admin backends or database panels, you can configure a ",(0,t.jsx)(s.strong,{children:"whitelist"})," to only allow access from the company's internal network or specific bastion hosts."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Implementing Geographic Restrictions"}),": Achieve simple location-based access control by adding IP ranges of specific countries or regions to a blacklist or whitelist."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Authorizing API Access"}),": Grant API access to partners or specific servers by adding their IP addresses to a ",(0,t.jsx)(s.strong,{children:"whitelist"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,t.jsxs)(s.p,{children:["Configuration is done in the ",(0,t.jsx)(s.code,{children:"plugin.ip-restriction.toml"})," file."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Parameter"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Default"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"type"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"String"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.strong,{children:"Yes"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,t.jsx)(s.strong,{children:"(Required)"})," The type of restriction. Possible values are ",(0,t.jsx)(s.code,{children:'"deny"'})," (blacklist mode) or ",(0,t.jsx)(s.code,{children:'"allow"'})," (whitelist mode)."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"ip_list"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Array of Strings"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.strong,{children:"Yes"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"[]"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,t.jsx)(s.strong,{children:"(Required)"})," A list of IP addresses. Supports both single IPs (e.g., ",(0,t.jsx)(s.code,{children:'"192.168.1.10"'}),") and CIDR network ranges (e.g., ",(0,t.jsx)(s.code,{children:'"10.0.0.0/8"'}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"message"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"String"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"No"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:'"Request is forbidden"'})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"A custom message to return to the client when a request is denied."})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"complete-examples",children:"Complete Examples"}),"\n",(0,t.jsx)(s.h3,{id:"example-1-using-a-blacklist-to-block-malicious-ips",children:"Example 1: Using a Blacklist to Block Malicious IPs"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Goal"}),": We've found that the IP ",(0,t.jsx)(s.code,{children:"1.2.3.4"})," and the ",(0,t.jsx)(s.code,{children:"5.6.7.0/24"})," network range are maliciously scanning our website and need to be blocked."]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["Configure the plugin (",(0,t.jsx)(s.code,{children:"plugin.ip-blacklist.toml"}),")"]}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'# Set to blacklist mode\ntype = "deny"\n\n# List the IPs and network ranges to block\nip_list = [\n  "1.2.3.4",\n  "5.6.7.0/24",\n]\n\n# Optional: Provide a more user-friendly message\nmessage = "Your IP address has been blocked due to suspicious activity."\n'})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["Apply the plugin in a Location (",(0,t.jsx)(s.code,{children:"location.toml"}),")"]}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'# ...\n[locations.route-for-my-app]\n# Match all requests\npath = "/"\nupstream = "my-web-server"\nplugins = [\n    # Place the blacklist plugin first to intercept malicious requests early\n    "ip-blacklist",\n    # ... other plugins\n]\n# ...\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"access-effects",children:"Access Effects"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Any request from ",(0,t.jsx)(s.code,{children:"1.2.3.4"})," or ",(0,t.jsx)(s.code,{children:"5.6.7.100"})," will be immediately intercepted and receive a ",(0,t.jsx)(s.code,{children:"403 Forbidden"})," response with our custom ",(0,t.jsx)(s.code,{children:"message"})," as the body."]}),"\n",(0,t.jsxs)(s.li,{children:["Requests from any other IP address (e.g., ",(0,t.jsx)(s.code,{children:"8.8.8.8"}),") will be unaffected and forwarded normally to ",(0,t.jsx)(s.code,{children:"my-web-server"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-2-using-a-whitelist-to-protect-an-admin-backend",children:"Example 2: Using a Whitelist to Protect an Admin Backend"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Goal"}),": Our admin backend should only be accessible from the office network (",(0,t.jsx)(s.code,{children:"10.20.0.0/16"}),") and a specific operations bastion host (",(0,t.jsx)(s.code,{children:"172.16.3.100"}),")."]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["Configure the plugin (",(0,t.jsx)(s.code,{children:"plugin.ip-whitelist-admin.toml"}),")"]}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'# Set to whitelist mode\ntype = "allow"\n\n# List the IPs and network ranges allowed to access\nip_list = [\n  "10.20.0.0/16",\n  "172.16.3.100",\n]\n'})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["Apply the plugin in a Location (",(0,t.jsx)(s.code,{children:"location.toml"}),")"]}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'# ...\n[locations.route-for-admin]\n# Only apply to the admin backend path\npath = "/admin/"\nupstream = "admin-backend"\nplugins = [\n    "ip-whitelist-admin",\n    # ... other authentication plugins\n]\n# ...\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"access-effects-1",children:"Access Effects"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Requests from ",(0,t.jsx)(s.code,{children:"10.20.30.40"})," or ",(0,t.jsx)(s.code,{children:"172.16.3.100"})," can access the ",(0,t.jsx)(s.code,{children:"/admin/"})," path normally."]}),"\n",(0,t.jsxs)(s.li,{children:["Requests from any other IP address (e.g., ",(0,t.jsx)(s.code,{children:"8.8.8.8"}),") attempting to access ",(0,t.jsx)(s.code,{children:"/admin/"})," will be intercepted and receive a ",(0,t.jsx)(s.code,{children:"403 Forbidden"})," response."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(6540);const t={},l=i.createContext(t);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);